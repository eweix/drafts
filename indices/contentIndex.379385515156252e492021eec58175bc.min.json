{"/":{"title":"About","content":"## About\nThis is my personal wiki.\nIt contains everything from recipes (with food) to recipes (with code) to notes on books and songs that I like.\nThe notes here are written for me, so they may be missing context or make herculean leaps in logic.\n\nIt also makes it easier for me to share recipes or book recommendations with friends, since websites are more friendly than text files.\n\n## Lists\n- [[collections/inspiration-list|inspiration list]]\n\n## Index\n- Everything\n- Code\n\t- [[code/hugo|hugo]]\n- [[music/music|Music]]\n- [[Reading List]]\n- [[Recipes]]\n- [[synbio/synbio|Synthetic biology]]\n\n## Colophon\nI read articles in [NetNewsWire](https://netnewswire.com) and books in print.\nI write in [markdown](https://www.markdownguide.org/), using [neovim](https://neovim.io/) and [obsidian](https://obsidian.md).\nNotes are published using a modified version of [quartz](https://quartz.jzhao.xyz/) and [hugo](https://gohugo.io).\nThis wiki is hosted through [GitHub Pages](https://pages.github.com/).","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/code/hugo":{"title":"Hugo","content":"\n[Hugo](https://gohugo.io/) is a static site generator written in [go](https://go.dev/).\n\n[[_index|This wiki]] runs on Hugo.\n\nIt's a little more complicated to use than Jekyll, but it's *much* faster and seems to work better for development. I ported all of my work over to Hugo this year, and I'm very satisfied with the build times (measured in milliseconds!).\n\n## Resources\n- [Hugo Actually Explained](https://youtu.be/ZFL09qhKi5I) (video)\n- [Hugo documentation](https://gohugo.io/documentation/)\n\n## Tools\n- [Quartz](https://quartz.jzhao.xyz/). Publish linked markdown notes.","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/code/naming-style-guide":{"title":"Naming Style Guide","content":"\nNames are important! Especially when it comes to files and organization. Taking a little bit of time to establish a consistent syntax/style for naming makes it much easier to find things when you look for them later[^jennybc].\n\n- Use `\"_\"` underscores to delimit *units of meta-data* in a project\n- Use \"-\" hyphens to delimit *words* (basically replace spaces with these)\n\nWhen I make presentations or write essays, I name files like this:\n\n```\nYYYY-MM-DD_author-initials_project-name-here.ppt\n```\n\n[^jennybc]: From [https://speakerdeck.com/jennybc/how-to-name-files](https://speakerdeck.com/jennybc/how-to-name-files). Fantastic list of best practices for naming things.","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/collections/inspiration-list":{"title":"Inspiration List","content":"\n- [[games/liars-dice|liar's dice]]\n- [[miscellaneous/xeno-series|Xenoblade Chronicles]]\n- [[synbio/moclo-yeast-toolkit|MoClo kit]]\n- [[system/read-it-now-or-never|read it now or read it never]]\n- [[system/digital-gardens|digital-gardens]]","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/games/liars-dice":{"title":"Liar's Dice","content":"\n[Liar's dice](https://en.wikipedia.org/wiki/Liar%27s_dice) is a game that my friends and I picked up a year or so ago to pass the time as classes were ending. Turns out there's a whole family of games related to it, and it has some of its origins in the South American dice game [Dudo](https://en.wikipedia.org/wiki/Dudo). The only real restriction on these games is that you need to have friends and a lot of dice.\n\nLiar's dice is, first and foremost, about bluffing. It's in the name. You need a healthy amount of luck for it (a good hand of dice makes it much easier to win). But it's also a game about math and probability, which means there's a place for skill at the table. \n\nThe rules are deceptively simple, though I find them difficult to explain. I think they are best learned through play and demonstration, as in most things.","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/miscellaneous/xeno-series":{"title":"Xenoblade Series","content":"\nThe Xeno- series (also sometimes called the Perfect Works saga) is a set of videogames that starts with Xenogears (1998). I've only played the Xenoblade Chronicles games and the relevant DLC. These games contain a lot of themes inspired by Jungian psychology, gnosticism, existentialism, and some other pretty heavy philosophy. But mostly they're fantastic JRPGs.\n\n\n[Obliterating My Mental Health with Xenoblade Chronicles](https://www.youtube.com/watch?v=pjyNxtpLvh0)\n\nA two and a half hour video essay on xenoblade chronicles. It's a fantastic summary of the series. I cannot in good conscience recommend this video for the same reason I cannot in good conscience recommend xenoblade chronicles or anything in the Perfect Works saga: it's too great a time sink anyone with a job. I only managed to beat Xenoblade 3 and Future Redeemed by spending gratuitous amounts of time on the couch during the summer.","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/music/backwards-practice":{"title":"Practice backwards","content":"When approaching a difficult excerpt or passage in music, instinct tells us to practice it over and over again from start to finish. While this works okay, it gives us a bias towards being very good at the beginning of a passage and less good at the end of a passage. To combat this, consider practicing things backwards.\n\nStart at the end of a passage—know where you have to land, how you want it to sound. Then work backwards and keep in mind how you set yourself up for that. Do a single measure (at most) at a time. [[music/slow-fast-practice|Practice slow, then fast]]. Then connect it up with the parts after it. This way you get very good at the end of the passage, and it becomes easier to stick the landing. Further difficulties can be ironed out through repetition.","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/music/music":{"title":"Music","content":"\n## Exercises\n- [[music/shifting-exercises|Shifting exercises]]\n- [[music/backwards-practice|Practice backwards]]\n- [[music/slow-fast-practice|Practice slow, then fast]]","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/music/shifting-exercises":{"title":"Shifting exercises","content":"","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/music/slow-fast-practice":{"title":"Practice slow, then fast","content":"\nDoing things fast is fun, but moving quickly without practice leads to mistakes. The best way to avoid this is to go slowly first. Speed comes from repetition[^Ben].\n\n## Exercises\nTo improve finger speed - play slowly, almost with legato bowings (don't worry about articulation, that comes later too). This helps force you to keep the string pressed and move your fingers quickly[^strings]. Use a metronome. Avoid pauses and iron out mistakes—your practice habits become your performance habits!\n\nTo work out awkward octave jumps or very complicated fingerings, first think through the fingerings available. Sometimes there's a better option. Play what you can in each hand position, then *very very quickly* shift. Pause for a moment. Set your bow. Then play. And so on and so forth. Also consider [[music/backwards-practice|backwards practice]] with complex fingerings.\n\n[^Ben]: This is the mantra of my first bass instructor.\n[^strings]: Another thing that can help with keeping the strings pressed down even while shifting is leaning the bass. This can be awkard, so get someone else to help you if you're concerned. For the exercise, lean the bass very far forward so the neck is pressing into your fingertips as you play or shift. Run your fingerings forwards and backwards a few times, then return to normal playing—but remember the feeling!","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/recipes/tuscan-vegetable-soup":{"title":"Tuscan Vegetable Soup","content":"\nLike minestrone soup, but on steroids.\n\n## Ingredients\n\n\n## Instructions","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/synbio/bistable-switch-operon":{"title":"Bistable Switch","content":"![[_media/bistable-switch.svg]]\n\nThe bistable switch is a type of [[synbio/operon-model|operon]] that consists of two inhibitors. Because each one downregulates the activity of the other, this results in two stable phenotypes. External stimula can cause a switch between these conditions.\n\n","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/synbio/central-dogma":{"title":"Central Dogma","content":"\nDNA is transcribed into RNA. RNA is translated into peptide chains, which fold into useful proteins. Proteins assist the cell in performing the functions of life, including replicating DNA. This is the central dogma of cellular biology.","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/synbio/moclo-yeast-toolkit":{"title":"MoClo Yeast Toolkit","content":"\nThe MoClo Yeast Toolkit[^moclo] (YTK) is a set of design principles and parts for construct design in yeast (and particularly *[[synbio/saccharomyces-cerevisiae|S. cerevisiae]]*). The YTK uses [[Golden Gate Cloning]] techniques to create a standard syntax for construct design. \n\n## MoClo Taxonomy\nMoClo has three \"types\" of plasmids:\n- Part plasmids are not ready for expression in yeast. Instead, these are like your catalog of sequences. These plasmids have BsaI binding sites that are used to define the part type.\n- Cassette plasmids are complete transcriptional units. These are assembled from one of each part plasmid. This is the beauty of the MoClo kit—you can easily mix and match and make an entirely new cassete in about half an hour.\n- Multigene plasmids are assembled from the transcriptional units in cassette plasmids, and allow expression of multiple genes. This makes transformation much more convenient, since it uses only a single plasmid for expression.\n\nTo use a sequence with the MoClo toolkit, you have to go through a process of \"domesticating\" it into the kit taxonomy, assembling it into a part plasmid. From there, you can begin building your transcriptional units.\n\n![[_media/moclo-workflow.png]]\n\n## MoClo Golden Gate Syntax\nMoClo syntax divides sequences into different types depending on the purpose of the DNA:\n1. Assembly connectors. This set goes at the start of the TU. These are used in cassette plasmids to define where that transcriptional unit will fit in a multi-gene plasmid.\n2. Promoters.\n3. Coding sequences. This is where the sequence for your protein of interest goes.\n4. Terminator.\n5. Assembly Connectors. These ones go at the end of the TU.\n6. Yeast marker.\n7. Yeast origin. Where the yeast starts copying the plasmid.\n8. Bacterial marker + origin. Where the bacteria start copying the plasmid.\n\n\n[^moclo]: Lee, M.E., DeLoache, W.C., Cervantes, B., and Dueber, J.E. (2015). A Highly Characterized Yeast Toolkit for Modular, Multipart Assembly. ACS Synth. Biol. _4_, 975–986. [10.1021/sb500366v](https://doi.org/10.1021/sb500366v).","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/synbio/operon-model":{"title":"Operon Model","content":"\nDeveloped by Jacob and Monod, the operon describes methods of gene regulation and control. These genetic circuits help to produce varying phenotypes. Operons behave like a biological logic circuit, and can be thought of as something similar to logic gates or operators in programming.\n\nThe genetic circuits described by the operon model are the foundation of modern [[synbio/synbio|synthetic biology]].\n\n## Elements\n- Regulatory genes.\n- Target operators.\n- Structural genes.\n\n## Operon types\n- [[synbio/bistable-switch-operon]]\n- [[genetic-oscillator-operon]]\n- [[genetic-toggle-switch-operon]]\n- [[repressilator-operon]]\n- [[autoregulatory-latch-operon]]\n- [[feedback-oscillator-operon]]","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/synbio/protein-domain-shuffling":{"title":"Protein domain shuffling","content":"## Lateral domain shuffling\nTypical protein-based design strategies rely on breaking a protein down into individual domains. Modular domains can then be used to design new constructs and networks.\n\nFor example, you could take sensor domain from a protein and attach it to something else, or swap around the domain that starts signal transduction. You could end up changing the stimuli or response to it, and thus influence overall cell dynamics!\n\nThe difficulty with this strategy is that you never know quite what you're going to get from your new constructs. Removing one domain might ruin the protein folding and then break your whole peptide chain!\n\n## Circular permutation\nThe alternative approach to domain shuffling is to reuse domains from the same protein, but in a different order. While this is much more difficult to do well than lateral domain shuffling, it can produce very interesting results (like circular fluorescent proteins[^circular-gfp]).\n\nIt's called circular permutation because you put the end of the protein at the front, typically.\n\n\n[^circular-gfp]: Kostyuk, A.I., Demidovich, A.D., Kotova, D.A., Belousov, V.V., and Bilan, D.S. (2019). Circularly Permuted Fluorescent Protein-Based Indicators: History, Principles, and Classification. International Journal of Molecular Sciences _20_, 4200. [10.3390/ijms20174200](https://doi.org/10.3390/ijms20174200).","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/synbio/saccharomyces-cerevisiae":{"title":"Saccharomyces cerevisiae","content":"\n*Saccharomyces cerevisiae* (baker's yeast) is a well-characterized organism in biology. I've started working them in the summer of 2023, and I find them very friendly (especially compared to the fussiness of metazoan tissue culture).\n\nYeast, and *S. cerevisiae* in particular, boast many [[synbio/synbio|synthetic biology tools]] that make them ideal platforms for high-throughput experimentation.\n- To quickly test many combinations of two proteins, one can transform one of the two mating types with each, crossbreed the results, and run an auxotrophic selection to get diploid cells with both proteins.\n\t- This method scales quadratically: 5x5 means 10 transformations for 25 combinations; 10x10 means 20 transformations for 100 combinations.\n- Expression of proteins in yeast can be tweaked by changing the type of [[synbio/yeast-vectors|vector]] used in transformation.\n- The [[synbio/moclo-yeast-toolkit|MoClo yeast toolkit]] uses a robust [[Golden Gate Cloning]] syntax to quickly build custom constructs from a library of parts.\n\nYeast have three primary types of [[synbio/yeast-vectors|expression vectors]]: integrating plasmids, cen-ARS plasmids, and 2-micron plasmids. Genes of interest must be cloned into these for yeast experimentation.\n\nGenes can be expressed in yeast using a simple transformation, unlike metazoan cells (which require a more complex transfection or transduction).","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/synbio/synbio":{"title":"Synthetic Biology","content":"Synthetic biology is a field of science that focuses on creating biological systems for fun and profit. Hallmark examples of synthetic biology include:\n- Engineering organisms to produce a specific material or substance (ex: insulin can be made using recombinant sunflowers[^insulin-production])\n- Creating organisms that can detect and respond to certain stimuli (ex: using modified bacteria to probe microorganism communities in soil)\n- Generally finding ways to control the behaviors/functions of organisms\n\n\n[^insulin-production]: [https://en.wikipedia.org/wiki/Insulin#Medical_uses](https://en.wikipedia.org/wiki/Insulin#Medical_uses)\n[^gene-policy]: [https://www.genome.gov/about-genomics/policy-issues/Synthetic-Biology](https://www.genome.gov/about-genomics/policy-issues/Synthetic-Biology)","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/synbio/yeast-vectors":{"title":"Yeast Vectors","content":"Yeast have three primary types of [[synbio/yeast-vectors|expression vectors]]: integrating plasmids, cen-ARS plasmids, and 2-micron plasmids. Genes of interest must be cloned into these for yeast experimentation.\n\n## Integrating Plasmids\nThese are integrated directly into the yeast genome. You have to digest these and make a cut in the yeast's DNA to integrate it.\n\n## Cen-ARS Plasmids\nCentromere Autonomous Replicating Sequence\n\n## 2-Micron Plasmids\n\n\n[^Baghban]: Baghban, R., Farajnia, S., Rajabibazl, M., Ghasemi, Y., Mafi, A., Hoseinpoor, R., Rahbarnia, L., and Aria, M. (2019). Yeast Expression Systems: Overview and Recent Advances. Mol Biotechnol _61_, 365–384. [10.1007/s12033-019-00164-8](https://doi.org/10.1007/s12033-019-00164-8).","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/system/all-first-drafts-are-perfect":{"title":"Perfect First Drafts","content":"\n\u003e *\"Every first draft is perfect, because all a first draft has to do is exist.\"*\n\u003e \u003ccite\u003e—Jane Smiley\u003c/cite\u003e\n\n[https://joelhooks.com/on-writing-more](https://joelhooks.com/on-writing-more)\n\n\u003e Seriously. The idea of a \"blog\" needs to get over itself. Everybody is treating writing as a \"content marketing strategy\" and using it to \"build a personal brand\" which leads to the fundamental flawed idea that everything you post has to be polished to perfection and ready to be consumed.\n\nYeah, ditto on this. I tried keeping something like a blog for an undefined period of time, but I didn't enjoy it. The whole thing felt weirdly insincere. That's what I like about this wiki/drafts/digital garden schtick—you just write the things you want to write for you, then chuck it all onto the interwebz.\n\n[https://jvns.ca/blog/2017/03/20/blogging-principles/](https://jvns.ca/blog/2017/03/20/blogging-principles/)\n\n\n[https://jvns.ca/blog/2023/06/05/some-blogging-myths/](https://jvns.ca/blog/2023/06/05/some-blogging-myths/)\n\n\n[https://jvns.ca/blog/2023/08/07/tactics-for-writing-in-public/](https://jvns.ca/blog/2023/08/07/tactics-for-writing-in-public/)\n\n","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/system/digital-gardens":{"title":"On Digital Gardens","content":"\n## What is a Digital Garden?\nIn short, a digital garden (or personal wiki or hypertext farm or what-have-you) is a way of displaying your thinking. It's like working with the garage door open. These are like a sort of anti-blog: corraled and contained, yes, but not necessarily polished or perfect. Just like a real garden.\n\n[https://www.technologyreview.com/2020/09/03/1007716/digital-gardens-let-you-cultivate-your-own-little-bit-of-the-internet/](https://www.technologyreview.com/2020/09/03/1007716/digital-gardens-let-you-cultivate-your-own-little-bit-of-the-internet/)\n\n\u003e The idea is similar to editing a Wikipedia entry, though digital gardens are not meant to be the ultimate word on a topic. As a slower, clunkier way to explore the internet, they revel in not being _the_ definitive source, just _a_ source, says Mike Caulfield, a digital literacy expert at Washington State University.","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]},"/system/read-it-now-or-never":{"title":"Read It Now or Read It Never","content":"\nBasically, get rid of your inboxes for links and stuff—you're not going to really use them. When you come across something, you should either read it now or never read it.","lastmodified":"2023-08-14T16:38:12.526318264Z","tags":[]}}